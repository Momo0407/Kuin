+func [d0000.knd, _makeReader, _make_instance] makeReader(me2: @Reader, path: []char): @Reader
end func

+func [d0000.knd, _makeWriter, _make_instance] makeWriter(me2: @Writer, path: []char, append: bool): @Writer
end func

+enum Origin
	head
	current
	tail
end enum

+class Reader(kuin@ResClass)
	*func [d0000.knd, _streamDtor, _force] _dtor()
	end func

	+func [d0000.knd, _streamFin] fin()
	end func

	+func [d0000.knd, _streamSetPos] setPos(origin: @Origin, pos: int)
	end func

	+func [d0000.knd, _streamGetPos] getPos(): int
	end func

	+func [d0000.knd, _streamRead] read(size: int): []bit8
	end func

	+func [d0000.knd, _streamFileSize] fileSize(): int
	end func

	+func [d0000.knd, _streamTerm] term(): bool
	end func

	var handle: int

	var delimiterNum: int

	var delimiter: int
end class

+class Writer(kuin@ResClass)
	*func [d0000.knd, _streamDtor, _force] _dtor()
	end func

	+func [d0000.knd, _streamFin] fin()
	end func

	+func [d0000.knd, _streamSetPos] setPos(origin: @Origin, pos: int)
	end func

	+func [d0000.knd, _streamGetPos] getPos(): int
	end func

	+func [d0000.knd, _streamWrite] write(data: []bit8)
	end func

	var handle: int

	var delimiterNum: int

	var delimiter: int
end class

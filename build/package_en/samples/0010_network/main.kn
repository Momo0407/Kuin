; Network Sample (C)Kuina-chan

const url: []char :: "https://kuina.ch"

func main()
	var wndMain: wnd@Wnd :: wnd@makeWnd(null, %normal, 1024, 768, "Network Sample")
	var edit1: wnd@EditMulti :: wnd@makeEditMulti(wndMain, 12, 12, 485, 676, %fix, %scale)
	do edit1.readonly(true)
	var edit2: wnd@EditMulti :: wnd@makeEditMulti(wndMain, 500, 12, 485, 676, %scale, %scale)
	do edit2.readonly(true)
	
	; Obtaining HTML data via HTTP.
	var http: net@Http :: net@makeHttp(@url, false, null)
	var s: []char :: null
	while(s =& null) {Loop until successful acquisition.}
		do lib@sleep(1) {Avoid occupying the CPU.}
		do s :: http.get()
	end while
	do edit1.setText(s ~ "\n")
	
	; TCP communication.
	var testData: []bit8 :: "Test Data" $> []bit8 {Data to be sent.}
	var server: net@TcpServer :: net@makeTcpServer(1024) {Creating a server.}
	var client: net@Tcp :: net@makeTcpClient("localhost", 1024) {Create a client and connect to the server.}
	var serverConnect: net@Tcp :: null
	while(serverConnect =& null) {Loop until a connection request is received from the client.}
		do lib@sleep(1)
		do serverConnect :: server.get()
	end while
	do client.send(testData) {Send data from the client.}
	var serverData: []bit8 :: null
	while(serverData =& null) {Loop until the data sent by the client can be received.}
		do lib@sleep(1)
		do serverData :: serverConnect.receive(^testData)
	end while
	do edit2.setText((serverData $< []char) ~ "\n")
	
	while(wnd@act())
	end while
end func

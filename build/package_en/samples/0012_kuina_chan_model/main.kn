; Draw Kuina-chan Model Sample (C)Kuina-chan

func main()
	var wndMain: wnd@Wnd :: wnd@makeWnd(null, %aspect, 1600, 900, "Draw Kuina-chan Model Sample") {Creating a window.}
	var drawMain: wnd@Draw :: wnd@makeDraw(wndMain, 0, 0, 1600, 900, %scale, %scale, false) {Creating a draw control.}
	var obj: draw@Obj :: draw@makeObj("res/kuina_chan.knobj") {Loading the Kuina-chan model.}
	var texAlbedo: draw@Tex :: draw@makeTex("res/albedo.png") {Loading albedo textures for the Kuina-chan model.}
	var texNormal: draw@Tex :: draw@makeTexArgb("res/normal.png") {Loading normal map textures for the Kuina-chan model.}
	do draw@clearColor(0xFFEEEEEE) {Setting the background color.}
	do draw@depth(true, true) {Setting the Z buffer.}
	do draw@ambLight(0.9, 0.9, 1.0, 1.0, 0.9, 0.9) {Setting the ambient light.}
	do obj.pos(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0) {Setting the position of the Kuina-chan model.}
	var angle: float :: 0.0 {Camera angle.}
	do draw@proj(lib@pi / 180.0 * 27.0, 16.0, 9.0, 0.1, 100.0) {Projection Settings.}
	var anim: float :: 0.0 {For animation of Kuina-chan.}
	while(wnd@act())
		do angle :+ lib@pi / 120.0 {Make it go around once every 4 seconds.}
		do draw@camera(80.0 * lib@sin(angle), 4.0, 80.0 * lib@cos(angle), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) {Camera settings.}
		do obj.drawToon(0, anim, texAlbedo, null, texNormal) {Drawing the Kuina-chan model.}
		do obj.drawOutline(0, anim, 0.05, 0xFF664444) {Drawing the contour line.}
		do anim :: (anim + 0.5) % 60.0 {Perform animation.}
		do draw@render(60)
	end while
end func

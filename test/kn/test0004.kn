var s: []char :: "abc" ~ "def"

func main()
	for(1, 3)
		block
			do cui@print(@s)

			var a: [][]char :: ["ab", "cd", "ef"]
			do cui@print(a[0] ~ ", " ~ a[1] ~ ", " ~ a[2])
		end block

		block
			func f(n: int): int
				ret n = 0 ?(1, n * f(n - 1))
			end func

			do cui@print(f(5).toStr())

			func g(n: [][]char, m: [][]char): [][]char
				ret [n[0], m[0]]
			end func

			var s: [][]char :: ["ab", "cd"]
			var t: [][]char :: ["ef", "gh"]
			var u: [][]char :: g(s, t)
			do cui@print((^u).toStr() ~ ", " ~ u[0] ~ ", " ~ u[1])
		end block

		for i(1, 5, 2)
			for j(i, 1, -2)
				do cui@print(i.toStr() ~ ", " ~ j.toStr())
			end for
		end for

		block
			var i: int :: 1
			while(i <= 5)
				var j: int :: i
				while (j >= 1)
					do cui@print(i.toStr() ~ ", " ~ j.toStr())
					do j :- 2
				end while
				do i :+ 2
			end while
		end block

		block
			var i: int :: 1
			while(i % 2 = 0, skip)
				do cui@print(i.toStr())
				do i :+ 1
			end while
		end block

		for i(1, 15)
			if(i % 3 = 0 & i % 5 = 0)
				do cui@print("FizzBuzz")
			elif(i % 3 = 0)
				do cui@print("Fizz")
			elif(i % 5 = 0)
				do cui@print("Buzz")
			else
				do cui@print(i.toStr())
			end if
		end for

		for i(1, 10)
			switch n(i)
			case 2, 6 to 7
				do cui@print("abc")
			case 4 to 6, 9
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i $ float)
			case 2.0, 6.0 to 7.0
				do cui@print("abc")
			case 4.0 to 6.0, 9.0
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i $ bit8)
			case 2b8, 6b8 to 7b8
				do cui@print("abc")
			case 4b8 to 6b8, 9b8
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i $ bit16)
			case 2b16, 6b16 to 7b16
				do cui@print("abc")
			case 4b16 to 6b16, 9b16
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i $ bit32)
			case 2b32, 6b32 to 7b32
				do cui@print("abc")
			case 4b32 to 6b32, 9b32
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i $ bit64)
			case 2b64, 6b64 to 7b64
				do cui@print("abc")
			case 4b64 to 6b64, 9b64
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(('A' $ int + i) $ char)
			case 'C', 'E' to 'F'
				do cui@print("abc")
			case 'F' to 'H', 'J'
				do cui@print("def")
			default
				do cui@print(n.toStr())
			end switch
		end for

		for i(1, 10)
			switch n(i.toStr())
			case "2", "6" to "7"
				do cui@print("abc")
			case "4" to "6", "9"
				do cui@print("def")
			default
				do cui@print(n)
			end switch
		end for
	end for
end func

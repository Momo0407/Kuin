+class DocAr2d(\doc_ar@DocAr)
	*func ctor()
		do super(me)
		do me.root :: #@ObjLayer
		var width: int
		var height: int
		do me.root.getDefaultSize(&width, &height)
		do me.root.init("layer", true, 0, 0, width, height)
	end func

	+*func fix()
		var lines: list<[]char> :: #list<[]char>
		do lines.add("+func draw()")
		do me.src :: lines.toArray()
	end func

	*func makeObj(name: []char): \doc_ar@Obj
		switch(name)
		case "Layer"
			ret #@ObjLayer
		case "Line"
			ret #@ObjLine
		end switch
		ret null
	end func

	*func updateLt()
		do \form@listLt.add("Line", 1)
	end func
end class

class ObjAr2d(\doc_ar@Obj)
end class

class ObjLayer(@ObjAr2d)
	+*func draw(x: float, y: float, width: float, height: float)
		do draw@rect(x, y, width, height, 0xFFF0F0F0)
		do draw@rect(x, y, width, height, 0xFF1883D7)
	end func

	+*func getMinMax(minWidth: &int, minHeight: &int, maxWidth: &int, maxHeight: &int)
		do minWidth :: 50
		do minHeight :: 50
		do maxWidth :: lib@intMax
		do maxHeight :: lib@intMax
	end func

	+*func getDefaultSize(width: &int, height: &int)
		do width :: 640
		do height :: 480
	end func

	+*func kind(): []char
		ret "Layer"
	end func

	+*func init(name: []char, visible: bool, x: int, y: int, width: int, height: int)
		do super(me, name, visible, x, y, width, height)
	end func

	*func propsNames(): [][]char
		ret #[0][]char
	end func
end class

class ObjLine(@ObjAr2d)
	+*func draw(x: float, y: float, width: float, height: float)
		do draw@rect(x, y, width, height, 0xFFE1E1E1)
		do draw@rectLine(x, y, width, height, 0xFFADADAD)
	end func

	+*func getMinMax(minWidth: &int, minHeight: &int, maxWidth: &int, maxHeight: &int)
		do minWidth :: 10
		do minHeight :: 23
		do maxWidth :: lib@intMax
		do maxHeight :: lib@intMax
	end func

	+*func getDefaultSize(width: &int, height: &int)
		do width :: 75
		do height :: 23
	end func

	+*func kind(): []char
		ret "Line"
	end func

	+*func icon(): int
		ret 0
	end func

	+*func init(name: []char, visible: bool, x: int, y: int, width: int, height: int)
		do super(me, name, visible, x, y, width, height)
		do me.props.add("color", "0xFFFFFFFF")
	end func

	*func propsNames(): [][]char
		ret ["color"]
	end func
end class
